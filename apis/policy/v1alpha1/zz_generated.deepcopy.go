//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainPolicy) DeepCopyInto(out *DomainPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainPolicy.
func (in *DomainPolicy) DeepCopy() *DomainPolicy {
	if in == nil {
		return nil
	}
	out := new(DomainPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DomainPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainPolicyInitParameters) DeepCopyInto(out *DomainPolicyInitParameters) {
	*out = *in
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SMTPSenderAddressMatchesInstanceDomain != nil {
		in, out := &in.SMTPSenderAddressMatchesInstanceDomain, &out.SMTPSenderAddressMatchesInstanceDomain
		*out = new(bool)
		**out = **in
	}
	if in.UserLoginMustBeDomain != nil {
		in, out := &in.UserLoginMustBeDomain, &out.UserLoginMustBeDomain
		*out = new(bool)
		**out = **in
	}
	if in.ValidateOrgDomains != nil {
		in, out := &in.ValidateOrgDomains, &out.ValidateOrgDomains
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainPolicyInitParameters.
func (in *DomainPolicyInitParameters) DeepCopy() *DomainPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(DomainPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainPolicyList) DeepCopyInto(out *DomainPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]DomainPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainPolicyList.
func (in *DomainPolicyList) DeepCopy() *DomainPolicyList {
	if in == nil {
		return nil
	}
	out := new(DomainPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *DomainPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainPolicyObservation) DeepCopyInto(out *DomainPolicyObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.SMTPSenderAddressMatchesInstanceDomain != nil {
		in, out := &in.SMTPSenderAddressMatchesInstanceDomain, &out.SMTPSenderAddressMatchesInstanceDomain
		*out = new(bool)
		**out = **in
	}
	if in.UserLoginMustBeDomain != nil {
		in, out := &in.UserLoginMustBeDomain, &out.UserLoginMustBeDomain
		*out = new(bool)
		**out = **in
	}
	if in.ValidateOrgDomains != nil {
		in, out := &in.ValidateOrgDomains, &out.ValidateOrgDomains
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainPolicyObservation.
func (in *DomainPolicyObservation) DeepCopy() *DomainPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(DomainPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainPolicyParameters) DeepCopyInto(out *DomainPolicyParameters) {
	*out = *in
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.SMTPSenderAddressMatchesInstanceDomain != nil {
		in, out := &in.SMTPSenderAddressMatchesInstanceDomain, &out.SMTPSenderAddressMatchesInstanceDomain
		*out = new(bool)
		**out = **in
	}
	if in.UserLoginMustBeDomain != nil {
		in, out := &in.UserLoginMustBeDomain, &out.UserLoginMustBeDomain
		*out = new(bool)
		**out = **in
	}
	if in.ValidateOrgDomains != nil {
		in, out := &in.ValidateOrgDomains, &out.ValidateOrgDomains
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainPolicyParameters.
func (in *DomainPolicyParameters) DeepCopy() *DomainPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(DomainPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainPolicySpec) DeepCopyInto(out *DomainPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainPolicySpec.
func (in *DomainPolicySpec) DeepCopy() *DomainPolicySpec {
	if in == nil {
		return nil
	}
	out := new(DomainPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *DomainPolicyStatus) DeepCopyInto(out *DomainPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new DomainPolicyStatus.
func (in *DomainPolicyStatus) DeepCopy() *DomainPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(DomainPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelPolicy) DeepCopyInto(out *LabelPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelPolicy.
func (in *LabelPolicy) DeepCopy() *LabelPolicy {
	if in == nil {
		return nil
	}
	out := new(LabelPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LabelPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelPolicyInitParameters) DeepCopyInto(out *LabelPolicyInitParameters) {
	*out = *in
	if in.BackgroundColor != nil {
		in, out := &in.BackgroundColor, &out.BackgroundColor
		*out = new(string)
		**out = **in
	}
	if in.BackgroundColorDark != nil {
		in, out := &in.BackgroundColorDark, &out.BackgroundColorDark
		*out = new(string)
		**out = **in
	}
	if in.DisableWatermark != nil {
		in, out := &in.DisableWatermark, &out.DisableWatermark
		*out = new(bool)
		**out = **in
	}
	if in.FontColor != nil {
		in, out := &in.FontColor, &out.FontColor
		*out = new(string)
		**out = **in
	}
	if in.FontColorDark != nil {
		in, out := &in.FontColorDark, &out.FontColorDark
		*out = new(string)
		**out = **in
	}
	if in.FontHash != nil {
		in, out := &in.FontHash, &out.FontHash
		*out = new(string)
		**out = **in
	}
	if in.FontPath != nil {
		in, out := &in.FontPath, &out.FontPath
		*out = new(string)
		**out = **in
	}
	if in.HideLoginNameSuffix != nil {
		in, out := &in.HideLoginNameSuffix, &out.HideLoginNameSuffix
		*out = new(bool)
		**out = **in
	}
	if in.IconDarkHash != nil {
		in, out := &in.IconDarkHash, &out.IconDarkHash
		*out = new(string)
		**out = **in
	}
	if in.IconDarkPath != nil {
		in, out := &in.IconDarkPath, &out.IconDarkPath
		*out = new(string)
		**out = **in
	}
	if in.IconHash != nil {
		in, out := &in.IconHash, &out.IconHash
		*out = new(string)
		**out = **in
	}
	if in.IconPath != nil {
		in, out := &in.IconPath, &out.IconPath
		*out = new(string)
		**out = **in
	}
	if in.LogoDarkHash != nil {
		in, out := &in.LogoDarkHash, &out.LogoDarkHash
		*out = new(string)
		**out = **in
	}
	if in.LogoDarkPath != nil {
		in, out := &in.LogoDarkPath, &out.LogoDarkPath
		*out = new(string)
		**out = **in
	}
	if in.LogoHash != nil {
		in, out := &in.LogoHash, &out.LogoHash
		*out = new(string)
		**out = **in
	}
	if in.LogoPath != nil {
		in, out := &in.LogoPath, &out.LogoPath
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrimaryColor != nil {
		in, out := &in.PrimaryColor, &out.PrimaryColor
		*out = new(string)
		**out = **in
	}
	if in.PrimaryColorDark != nil {
		in, out := &in.PrimaryColorDark, &out.PrimaryColorDark
		*out = new(string)
		**out = **in
	}
	if in.SetActive != nil {
		in, out := &in.SetActive, &out.SetActive
		*out = new(bool)
		**out = **in
	}
	if in.ThemeMode != nil {
		in, out := &in.ThemeMode, &out.ThemeMode
		*out = new(string)
		**out = **in
	}
	if in.WarnColor != nil {
		in, out := &in.WarnColor, &out.WarnColor
		*out = new(string)
		**out = **in
	}
	if in.WarnColorDark != nil {
		in, out := &in.WarnColorDark, &out.WarnColorDark
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelPolicyInitParameters.
func (in *LabelPolicyInitParameters) DeepCopy() *LabelPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(LabelPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelPolicyList) DeepCopyInto(out *LabelPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LabelPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelPolicyList.
func (in *LabelPolicyList) DeepCopy() *LabelPolicyList {
	if in == nil {
		return nil
	}
	out := new(LabelPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LabelPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelPolicyObservation) DeepCopyInto(out *LabelPolicyObservation) {
	*out = *in
	if in.BackgroundColor != nil {
		in, out := &in.BackgroundColor, &out.BackgroundColor
		*out = new(string)
		**out = **in
	}
	if in.BackgroundColorDark != nil {
		in, out := &in.BackgroundColorDark, &out.BackgroundColorDark
		*out = new(string)
		**out = **in
	}
	if in.DisableWatermark != nil {
		in, out := &in.DisableWatermark, &out.DisableWatermark
		*out = new(bool)
		**out = **in
	}
	if in.FontColor != nil {
		in, out := &in.FontColor, &out.FontColor
		*out = new(string)
		**out = **in
	}
	if in.FontColorDark != nil {
		in, out := &in.FontColorDark, &out.FontColorDark
		*out = new(string)
		**out = **in
	}
	if in.FontHash != nil {
		in, out := &in.FontHash, &out.FontHash
		*out = new(string)
		**out = **in
	}
	if in.FontPath != nil {
		in, out := &in.FontPath, &out.FontPath
		*out = new(string)
		**out = **in
	}
	if in.FontURL != nil {
		in, out := &in.FontURL, &out.FontURL
		*out = new(string)
		**out = **in
	}
	if in.HideLoginNameSuffix != nil {
		in, out := &in.HideLoginNameSuffix, &out.HideLoginNameSuffix
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IconDarkHash != nil {
		in, out := &in.IconDarkHash, &out.IconDarkHash
		*out = new(string)
		**out = **in
	}
	if in.IconDarkPath != nil {
		in, out := &in.IconDarkPath, &out.IconDarkPath
		*out = new(string)
		**out = **in
	}
	if in.IconHash != nil {
		in, out := &in.IconHash, &out.IconHash
		*out = new(string)
		**out = **in
	}
	if in.IconPath != nil {
		in, out := &in.IconPath, &out.IconPath
		*out = new(string)
		**out = **in
	}
	if in.IconURL != nil {
		in, out := &in.IconURL, &out.IconURL
		*out = new(string)
		**out = **in
	}
	if in.IconURLDark != nil {
		in, out := &in.IconURLDark, &out.IconURLDark
		*out = new(string)
		**out = **in
	}
	if in.LogoDarkHash != nil {
		in, out := &in.LogoDarkHash, &out.LogoDarkHash
		*out = new(string)
		**out = **in
	}
	if in.LogoDarkPath != nil {
		in, out := &in.LogoDarkPath, &out.LogoDarkPath
		*out = new(string)
		**out = **in
	}
	if in.LogoHash != nil {
		in, out := &in.LogoHash, &out.LogoHash
		*out = new(string)
		**out = **in
	}
	if in.LogoPath != nil {
		in, out := &in.LogoPath, &out.LogoPath
		*out = new(string)
		**out = **in
	}
	if in.LogoURL != nil {
		in, out := &in.LogoURL, &out.LogoURL
		*out = new(string)
		**out = **in
	}
	if in.LogoURLDark != nil {
		in, out := &in.LogoURLDark, &out.LogoURLDark
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.PrimaryColor != nil {
		in, out := &in.PrimaryColor, &out.PrimaryColor
		*out = new(string)
		**out = **in
	}
	if in.PrimaryColorDark != nil {
		in, out := &in.PrimaryColorDark, &out.PrimaryColorDark
		*out = new(string)
		**out = **in
	}
	if in.SetActive != nil {
		in, out := &in.SetActive, &out.SetActive
		*out = new(bool)
		**out = **in
	}
	if in.ThemeMode != nil {
		in, out := &in.ThemeMode, &out.ThemeMode
		*out = new(string)
		**out = **in
	}
	if in.WarnColor != nil {
		in, out := &in.WarnColor, &out.WarnColor
		*out = new(string)
		**out = **in
	}
	if in.WarnColorDark != nil {
		in, out := &in.WarnColorDark, &out.WarnColorDark
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelPolicyObservation.
func (in *LabelPolicyObservation) DeepCopy() *LabelPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(LabelPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelPolicyParameters) DeepCopyInto(out *LabelPolicyParameters) {
	*out = *in
	if in.BackgroundColor != nil {
		in, out := &in.BackgroundColor, &out.BackgroundColor
		*out = new(string)
		**out = **in
	}
	if in.BackgroundColorDark != nil {
		in, out := &in.BackgroundColorDark, &out.BackgroundColorDark
		*out = new(string)
		**out = **in
	}
	if in.DisableWatermark != nil {
		in, out := &in.DisableWatermark, &out.DisableWatermark
		*out = new(bool)
		**out = **in
	}
	if in.FontColor != nil {
		in, out := &in.FontColor, &out.FontColor
		*out = new(string)
		**out = **in
	}
	if in.FontColorDark != nil {
		in, out := &in.FontColorDark, &out.FontColorDark
		*out = new(string)
		**out = **in
	}
	if in.FontHash != nil {
		in, out := &in.FontHash, &out.FontHash
		*out = new(string)
		**out = **in
	}
	if in.FontPath != nil {
		in, out := &in.FontPath, &out.FontPath
		*out = new(string)
		**out = **in
	}
	if in.HideLoginNameSuffix != nil {
		in, out := &in.HideLoginNameSuffix, &out.HideLoginNameSuffix
		*out = new(bool)
		**out = **in
	}
	if in.IconDarkHash != nil {
		in, out := &in.IconDarkHash, &out.IconDarkHash
		*out = new(string)
		**out = **in
	}
	if in.IconDarkPath != nil {
		in, out := &in.IconDarkPath, &out.IconDarkPath
		*out = new(string)
		**out = **in
	}
	if in.IconHash != nil {
		in, out := &in.IconHash, &out.IconHash
		*out = new(string)
		**out = **in
	}
	if in.IconPath != nil {
		in, out := &in.IconPath, &out.IconPath
		*out = new(string)
		**out = **in
	}
	if in.LogoDarkHash != nil {
		in, out := &in.LogoDarkHash, &out.LogoDarkHash
		*out = new(string)
		**out = **in
	}
	if in.LogoDarkPath != nil {
		in, out := &in.LogoDarkPath, &out.LogoDarkPath
		*out = new(string)
		**out = **in
	}
	if in.LogoHash != nil {
		in, out := &in.LogoHash, &out.LogoHash
		*out = new(string)
		**out = **in
	}
	if in.LogoPath != nil {
		in, out := &in.LogoPath, &out.LogoPath
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrimaryColor != nil {
		in, out := &in.PrimaryColor, &out.PrimaryColor
		*out = new(string)
		**out = **in
	}
	if in.PrimaryColorDark != nil {
		in, out := &in.PrimaryColorDark, &out.PrimaryColorDark
		*out = new(string)
		**out = **in
	}
	if in.SetActive != nil {
		in, out := &in.SetActive, &out.SetActive
		*out = new(bool)
		**out = **in
	}
	if in.ThemeMode != nil {
		in, out := &in.ThemeMode, &out.ThemeMode
		*out = new(string)
		**out = **in
	}
	if in.WarnColor != nil {
		in, out := &in.WarnColor, &out.WarnColor
		*out = new(string)
		**out = **in
	}
	if in.WarnColorDark != nil {
		in, out := &in.WarnColorDark, &out.WarnColorDark
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelPolicyParameters.
func (in *LabelPolicyParameters) DeepCopy() *LabelPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(LabelPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelPolicySpec) DeepCopyInto(out *LabelPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelPolicySpec.
func (in *LabelPolicySpec) DeepCopy() *LabelPolicySpec {
	if in == nil {
		return nil
	}
	out := new(LabelPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LabelPolicyStatus) DeepCopyInto(out *LabelPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LabelPolicyStatus.
func (in *LabelPolicyStatus) DeepCopy() *LabelPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(LabelPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LockoutPolicy) DeepCopyInto(out *LockoutPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LockoutPolicy.
func (in *LockoutPolicy) DeepCopy() *LockoutPolicy {
	if in == nil {
		return nil
	}
	out := new(LockoutPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LockoutPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LockoutPolicyInitParameters) DeepCopyInto(out *LockoutPolicyInitParameters) {
	*out = *in
	if in.MaxPasswordAttempts != nil {
		in, out := &in.MaxPasswordAttempts, &out.MaxPasswordAttempts
		*out = new(float64)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LockoutPolicyInitParameters.
func (in *LockoutPolicyInitParameters) DeepCopy() *LockoutPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(LockoutPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LockoutPolicyList) DeepCopyInto(out *LockoutPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LockoutPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LockoutPolicyList.
func (in *LockoutPolicyList) DeepCopy() *LockoutPolicyList {
	if in == nil {
		return nil
	}
	out := new(LockoutPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LockoutPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LockoutPolicyObservation) DeepCopyInto(out *LockoutPolicyObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MaxPasswordAttempts != nil {
		in, out := &in.MaxPasswordAttempts, &out.MaxPasswordAttempts
		*out = new(float64)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LockoutPolicyObservation.
func (in *LockoutPolicyObservation) DeepCopy() *LockoutPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(LockoutPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LockoutPolicyParameters) DeepCopyInto(out *LockoutPolicyParameters) {
	*out = *in
	if in.MaxPasswordAttempts != nil {
		in, out := &in.MaxPasswordAttempts, &out.MaxPasswordAttempts
		*out = new(float64)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LockoutPolicyParameters.
func (in *LockoutPolicyParameters) DeepCopy() *LockoutPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(LockoutPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LockoutPolicySpec) DeepCopyInto(out *LockoutPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LockoutPolicySpec.
func (in *LockoutPolicySpec) DeepCopy() *LockoutPolicySpec {
	if in == nil {
		return nil
	}
	out := new(LockoutPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LockoutPolicyStatus) DeepCopyInto(out *LockoutPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LockoutPolicyStatus.
func (in *LockoutPolicyStatus) DeepCopy() *LockoutPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(LockoutPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginPolicy) DeepCopyInto(out *LoginPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginPolicy.
func (in *LoginPolicy) DeepCopy() *LoginPolicy {
	if in == nil {
		return nil
	}
	out := new(LoginPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoginPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginPolicyInitParameters) DeepCopyInto(out *LoginPolicyInitParameters) {
	*out = *in
	if in.AllowDomainDiscovery != nil {
		in, out := &in.AllowDomainDiscovery, &out.AllowDomainDiscovery
		*out = new(bool)
		**out = **in
	}
	if in.AllowExternalIdp != nil {
		in, out := &in.AllowExternalIdp, &out.AllowExternalIdp
		*out = new(bool)
		**out = **in
	}
	if in.AllowRegister != nil {
		in, out := &in.AllowRegister, &out.AllowRegister
		*out = new(bool)
		**out = **in
	}
	if in.DefaultRedirectURI != nil {
		in, out := &in.DefaultRedirectURI, &out.DefaultRedirectURI
		*out = new(string)
		**out = **in
	}
	if in.DisableLoginWithEmail != nil {
		in, out := &in.DisableLoginWithEmail, &out.DisableLoginWithEmail
		*out = new(bool)
		**out = **in
	}
	if in.DisableLoginWithPhone != nil {
		in, out := &in.DisableLoginWithPhone, &out.DisableLoginWithPhone
		*out = new(bool)
		**out = **in
	}
	if in.ExternalLoginCheckLifetime != nil {
		in, out := &in.ExternalLoginCheckLifetime, &out.ExternalLoginCheckLifetime
		*out = new(string)
		**out = **in
	}
	if in.ForceMfa != nil {
		in, out := &in.ForceMfa, &out.ForceMfa
		*out = new(bool)
		**out = **in
	}
	if in.ForceMfaLocalOnly != nil {
		in, out := &in.ForceMfaLocalOnly, &out.ForceMfaLocalOnly
		*out = new(bool)
		**out = **in
	}
	if in.HidePasswordReset != nil {
		in, out := &in.HidePasswordReset, &out.HidePasswordReset
		*out = new(bool)
		**out = **in
	}
	if in.Idps != nil {
		in, out := &in.Idps, &out.Idps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IgnoreUnknownUsernames != nil {
		in, out := &in.IgnoreUnknownUsernames, &out.IgnoreUnknownUsernames
		*out = new(bool)
		**out = **in
	}
	if in.MfaInitSkipLifetime != nil {
		in, out := &in.MfaInitSkipLifetime, &out.MfaInitSkipLifetime
		*out = new(string)
		**out = **in
	}
	if in.MultiFactorCheckLifetime != nil {
		in, out := &in.MultiFactorCheckLifetime, &out.MultiFactorCheckLifetime
		*out = new(string)
		**out = **in
	}
	if in.MultiFactors != nil {
		in, out := &in.MultiFactors, &out.MultiFactors
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PasswordCheckLifetime != nil {
		in, out := &in.PasswordCheckLifetime, &out.PasswordCheckLifetime
		*out = new(string)
		**out = **in
	}
	if in.PasswordlessType != nil {
		in, out := &in.PasswordlessType, &out.PasswordlessType
		*out = new(string)
		**out = **in
	}
	if in.SecondFactorCheckLifetime != nil {
		in, out := &in.SecondFactorCheckLifetime, &out.SecondFactorCheckLifetime
		*out = new(string)
		**out = **in
	}
	if in.SecondFactors != nil {
		in, out := &in.SecondFactors, &out.SecondFactors
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UserLogin != nil {
		in, out := &in.UserLogin, &out.UserLogin
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginPolicyInitParameters.
func (in *LoginPolicyInitParameters) DeepCopy() *LoginPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(LoginPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginPolicyList) DeepCopyInto(out *LoginPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LoginPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginPolicyList.
func (in *LoginPolicyList) DeepCopy() *LoginPolicyList {
	if in == nil {
		return nil
	}
	out := new(LoginPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LoginPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginPolicyObservation) DeepCopyInto(out *LoginPolicyObservation) {
	*out = *in
	if in.AllowDomainDiscovery != nil {
		in, out := &in.AllowDomainDiscovery, &out.AllowDomainDiscovery
		*out = new(bool)
		**out = **in
	}
	if in.AllowExternalIdp != nil {
		in, out := &in.AllowExternalIdp, &out.AllowExternalIdp
		*out = new(bool)
		**out = **in
	}
	if in.AllowRegister != nil {
		in, out := &in.AllowRegister, &out.AllowRegister
		*out = new(bool)
		**out = **in
	}
	if in.DefaultRedirectURI != nil {
		in, out := &in.DefaultRedirectURI, &out.DefaultRedirectURI
		*out = new(string)
		**out = **in
	}
	if in.DisableLoginWithEmail != nil {
		in, out := &in.DisableLoginWithEmail, &out.DisableLoginWithEmail
		*out = new(bool)
		**out = **in
	}
	if in.DisableLoginWithPhone != nil {
		in, out := &in.DisableLoginWithPhone, &out.DisableLoginWithPhone
		*out = new(bool)
		**out = **in
	}
	if in.ExternalLoginCheckLifetime != nil {
		in, out := &in.ExternalLoginCheckLifetime, &out.ExternalLoginCheckLifetime
		*out = new(string)
		**out = **in
	}
	if in.ForceMfa != nil {
		in, out := &in.ForceMfa, &out.ForceMfa
		*out = new(bool)
		**out = **in
	}
	if in.ForceMfaLocalOnly != nil {
		in, out := &in.ForceMfaLocalOnly, &out.ForceMfaLocalOnly
		*out = new(bool)
		**out = **in
	}
	if in.HidePasswordReset != nil {
		in, out := &in.HidePasswordReset, &out.HidePasswordReset
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Idps != nil {
		in, out := &in.Idps, &out.Idps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IgnoreUnknownUsernames != nil {
		in, out := &in.IgnoreUnknownUsernames, &out.IgnoreUnknownUsernames
		*out = new(bool)
		**out = **in
	}
	if in.MfaInitSkipLifetime != nil {
		in, out := &in.MfaInitSkipLifetime, &out.MfaInitSkipLifetime
		*out = new(string)
		**out = **in
	}
	if in.MultiFactorCheckLifetime != nil {
		in, out := &in.MultiFactorCheckLifetime, &out.MultiFactorCheckLifetime
		*out = new(string)
		**out = **in
	}
	if in.MultiFactors != nil {
		in, out := &in.MultiFactors, &out.MultiFactors
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.PasswordCheckLifetime != nil {
		in, out := &in.PasswordCheckLifetime, &out.PasswordCheckLifetime
		*out = new(string)
		**out = **in
	}
	if in.PasswordlessType != nil {
		in, out := &in.PasswordlessType, &out.PasswordlessType
		*out = new(string)
		**out = **in
	}
	if in.SecondFactorCheckLifetime != nil {
		in, out := &in.SecondFactorCheckLifetime, &out.SecondFactorCheckLifetime
		*out = new(string)
		**out = **in
	}
	if in.SecondFactors != nil {
		in, out := &in.SecondFactors, &out.SecondFactors
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UserLogin != nil {
		in, out := &in.UserLogin, &out.UserLogin
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginPolicyObservation.
func (in *LoginPolicyObservation) DeepCopy() *LoginPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(LoginPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginPolicyParameters) DeepCopyInto(out *LoginPolicyParameters) {
	*out = *in
	if in.AllowDomainDiscovery != nil {
		in, out := &in.AllowDomainDiscovery, &out.AllowDomainDiscovery
		*out = new(bool)
		**out = **in
	}
	if in.AllowExternalIdp != nil {
		in, out := &in.AllowExternalIdp, &out.AllowExternalIdp
		*out = new(bool)
		**out = **in
	}
	if in.AllowRegister != nil {
		in, out := &in.AllowRegister, &out.AllowRegister
		*out = new(bool)
		**out = **in
	}
	if in.DefaultRedirectURI != nil {
		in, out := &in.DefaultRedirectURI, &out.DefaultRedirectURI
		*out = new(string)
		**out = **in
	}
	if in.DisableLoginWithEmail != nil {
		in, out := &in.DisableLoginWithEmail, &out.DisableLoginWithEmail
		*out = new(bool)
		**out = **in
	}
	if in.DisableLoginWithPhone != nil {
		in, out := &in.DisableLoginWithPhone, &out.DisableLoginWithPhone
		*out = new(bool)
		**out = **in
	}
	if in.ExternalLoginCheckLifetime != nil {
		in, out := &in.ExternalLoginCheckLifetime, &out.ExternalLoginCheckLifetime
		*out = new(string)
		**out = **in
	}
	if in.ForceMfa != nil {
		in, out := &in.ForceMfa, &out.ForceMfa
		*out = new(bool)
		**out = **in
	}
	if in.ForceMfaLocalOnly != nil {
		in, out := &in.ForceMfaLocalOnly, &out.ForceMfaLocalOnly
		*out = new(bool)
		**out = **in
	}
	if in.HidePasswordReset != nil {
		in, out := &in.HidePasswordReset, &out.HidePasswordReset
		*out = new(bool)
		**out = **in
	}
	if in.Idps != nil {
		in, out := &in.Idps, &out.Idps
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IgnoreUnknownUsernames != nil {
		in, out := &in.IgnoreUnknownUsernames, &out.IgnoreUnknownUsernames
		*out = new(bool)
		**out = **in
	}
	if in.MfaInitSkipLifetime != nil {
		in, out := &in.MfaInitSkipLifetime, &out.MfaInitSkipLifetime
		*out = new(string)
		**out = **in
	}
	if in.MultiFactorCheckLifetime != nil {
		in, out := &in.MultiFactorCheckLifetime, &out.MultiFactorCheckLifetime
		*out = new(string)
		**out = **in
	}
	if in.MultiFactors != nil {
		in, out := &in.MultiFactors, &out.MultiFactors
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PasswordCheckLifetime != nil {
		in, out := &in.PasswordCheckLifetime, &out.PasswordCheckLifetime
		*out = new(string)
		**out = **in
	}
	if in.PasswordlessType != nil {
		in, out := &in.PasswordlessType, &out.PasswordlessType
		*out = new(string)
		**out = **in
	}
	if in.SecondFactorCheckLifetime != nil {
		in, out := &in.SecondFactorCheckLifetime, &out.SecondFactorCheckLifetime
		*out = new(string)
		**out = **in
	}
	if in.SecondFactors != nil {
		in, out := &in.SecondFactors, &out.SecondFactors
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.UserLogin != nil {
		in, out := &in.UserLogin, &out.UserLogin
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginPolicyParameters.
func (in *LoginPolicyParameters) DeepCopy() *LoginPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(LoginPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginPolicySpec) DeepCopyInto(out *LoginPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginPolicySpec.
func (in *LoginPolicySpec) DeepCopy() *LoginPolicySpec {
	if in == nil {
		return nil
	}
	out := new(LoginPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LoginPolicyStatus) DeepCopyInto(out *LoginPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LoginPolicyStatus.
func (in *LoginPolicyStatus) DeepCopy() *LoginPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(LoginPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationPolicy) DeepCopyInto(out *NotificationPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationPolicy.
func (in *NotificationPolicy) DeepCopy() *NotificationPolicy {
	if in == nil {
		return nil
	}
	out := new(NotificationPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotificationPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationPolicyInitParameters) DeepCopyInto(out *NotificationPolicyInitParameters) {
	*out = *in
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PasswordChange != nil {
		in, out := &in.PasswordChange, &out.PasswordChange
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationPolicyInitParameters.
func (in *NotificationPolicyInitParameters) DeepCopy() *NotificationPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationPolicyList) DeepCopyInto(out *NotificationPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]NotificationPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationPolicyList.
func (in *NotificationPolicyList) DeepCopy() *NotificationPolicyList {
	if in == nil {
		return nil
	}
	out := new(NotificationPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *NotificationPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationPolicyObservation) DeepCopyInto(out *NotificationPolicyObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.PasswordChange != nil {
		in, out := &in.PasswordChange, &out.PasswordChange
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationPolicyObservation.
func (in *NotificationPolicyObservation) DeepCopy() *NotificationPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(NotificationPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationPolicyParameters) DeepCopyInto(out *NotificationPolicyParameters) {
	*out = *in
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PasswordChange != nil {
		in, out := &in.PasswordChange, &out.PasswordChange
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationPolicyParameters.
func (in *NotificationPolicyParameters) DeepCopy() *NotificationPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(NotificationPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationPolicySpec) DeepCopyInto(out *NotificationPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationPolicySpec.
func (in *NotificationPolicySpec) DeepCopy() *NotificationPolicySpec {
	if in == nil {
		return nil
	}
	out := new(NotificationPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *NotificationPolicyStatus) DeepCopyInto(out *NotificationPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new NotificationPolicyStatus.
func (in *NotificationPolicyStatus) DeepCopy() *NotificationPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(NotificationPolicyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivacyPolicy) DeepCopyInto(out *PrivacyPolicy) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivacyPolicy.
func (in *PrivacyPolicy) DeepCopy() *PrivacyPolicy {
	if in == nil {
		return nil
	}
	out := new(PrivacyPolicy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivacyPolicy) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivacyPolicyInitParameters) DeepCopyInto(out *PrivacyPolicyInitParameters) {
	*out = *in
	if in.HelpLink != nil {
		in, out := &in.HelpLink, &out.HelpLink
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivacyLink != nil {
		in, out := &in.PrivacyLink, &out.PrivacyLink
		*out = new(string)
		**out = **in
	}
	if in.SupportEmail != nil {
		in, out := &in.SupportEmail, &out.SupportEmail
		*out = new(string)
		**out = **in
	}
	if in.TosLink != nil {
		in, out := &in.TosLink, &out.TosLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivacyPolicyInitParameters.
func (in *PrivacyPolicyInitParameters) DeepCopy() *PrivacyPolicyInitParameters {
	if in == nil {
		return nil
	}
	out := new(PrivacyPolicyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivacyPolicyList) DeepCopyInto(out *PrivacyPolicyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PrivacyPolicy, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivacyPolicyList.
func (in *PrivacyPolicyList) DeepCopy() *PrivacyPolicyList {
	if in == nil {
		return nil
	}
	out := new(PrivacyPolicyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PrivacyPolicyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivacyPolicyObservation) DeepCopyInto(out *PrivacyPolicyObservation) {
	*out = *in
	if in.HelpLink != nil {
		in, out := &in.HelpLink, &out.HelpLink
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.PrivacyLink != nil {
		in, out := &in.PrivacyLink, &out.PrivacyLink
		*out = new(string)
		**out = **in
	}
	if in.SupportEmail != nil {
		in, out := &in.SupportEmail, &out.SupportEmail
		*out = new(string)
		**out = **in
	}
	if in.TosLink != nil {
		in, out := &in.TosLink, &out.TosLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivacyPolicyObservation.
func (in *PrivacyPolicyObservation) DeepCopy() *PrivacyPolicyObservation {
	if in == nil {
		return nil
	}
	out := new(PrivacyPolicyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivacyPolicyParameters) DeepCopyInto(out *PrivacyPolicyParameters) {
	*out = *in
	if in.HelpLink != nil {
		in, out := &in.HelpLink, &out.HelpLink
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PrivacyLink != nil {
		in, out := &in.PrivacyLink, &out.PrivacyLink
		*out = new(string)
		**out = **in
	}
	if in.SupportEmail != nil {
		in, out := &in.SupportEmail, &out.SupportEmail
		*out = new(string)
		**out = **in
	}
	if in.TosLink != nil {
		in, out := &in.TosLink, &out.TosLink
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivacyPolicyParameters.
func (in *PrivacyPolicyParameters) DeepCopy() *PrivacyPolicyParameters {
	if in == nil {
		return nil
	}
	out := new(PrivacyPolicyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivacyPolicySpec) DeepCopyInto(out *PrivacyPolicySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivacyPolicySpec.
func (in *PrivacyPolicySpec) DeepCopy() *PrivacyPolicySpec {
	if in == nil {
		return nil
	}
	out := new(PrivacyPolicySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PrivacyPolicyStatus) DeepCopyInto(out *PrivacyPolicyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PrivacyPolicyStatus.
func (in *PrivacyPolicyStatus) DeepCopy() *PrivacyPolicyStatus {
	if in == nil {
		return nil
	}
	out := new(PrivacyPolicyStatus)
	in.DeepCopyInto(out)
	return out
}
