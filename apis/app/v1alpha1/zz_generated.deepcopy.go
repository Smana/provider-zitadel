//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationApi) DeepCopyInto(out *ApplicationApi) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationApi.
func (in *ApplicationApi) DeepCopy() *ApplicationApi {
	if in == nil {
		return nil
	}
	out := new(ApplicationApi)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationApi) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationApiInitParameters) DeepCopyInto(out *ApplicationApiInitParameters) {
	*out = *in
	if in.AuthMethodType != nil {
		in, out := &in.AuthMethodType, &out.AuthMethodType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationApiInitParameters.
func (in *ApplicationApiInitParameters) DeepCopy() *ApplicationApiInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationApiInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationApiList) DeepCopyInto(out *ApplicationApiList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationApi, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationApiList.
func (in *ApplicationApiList) DeepCopy() *ApplicationApiList {
	if in == nil {
		return nil
	}
	out := new(ApplicationApiList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationApiList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationApiObservation) DeepCopyInto(out *ApplicationApiObservation) {
	*out = *in
	if in.AuthMethodType != nil {
		in, out := &in.AuthMethodType, &out.AuthMethodType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationApiObservation.
func (in *ApplicationApiObservation) DeepCopy() *ApplicationApiObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationApiObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationApiParameters) DeepCopyInto(out *ApplicationApiParameters) {
	*out = *in
	if in.AuthMethodType != nil {
		in, out := &in.AuthMethodType, &out.AuthMethodType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationApiParameters.
func (in *ApplicationApiParameters) DeepCopy() *ApplicationApiParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationApiParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationApiSpec) DeepCopyInto(out *ApplicationApiSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationApiSpec.
func (in *ApplicationApiSpec) DeepCopy() *ApplicationApiSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationApiSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationApiStatus) DeepCopyInto(out *ApplicationApiStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationApiStatus.
func (in *ApplicationApiStatus) DeepCopy() *ApplicationApiStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationApiStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationKey) DeepCopyInto(out *ApplicationKey) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationKey.
func (in *ApplicationKey) DeepCopy() *ApplicationKey {
	if in == nil {
		return nil
	}
	out := new(ApplicationKey)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationKey) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationKeyInitParameters) DeepCopyInto(out *ApplicationKeyInitParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppIDRef != nil {
		in, out := &in.AppIDRef, &out.AppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AppIDSelector != nil {
		in, out := &in.AppIDSelector, &out.AppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationKeyInitParameters.
func (in *ApplicationKeyInitParameters) DeepCopy() *ApplicationKeyInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationKeyInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationKeyList) DeepCopyInto(out *ApplicationKeyList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationKey, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationKeyList.
func (in *ApplicationKeyList) DeepCopy() *ApplicationKeyList {
	if in == nil {
		return nil
	}
	out := new(ApplicationKeyList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationKeyList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationKeyObservation) DeepCopyInto(out *ApplicationKeyObservation) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationKeyObservation.
func (in *ApplicationKeyObservation) DeepCopy() *ApplicationKeyObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationKeyObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationKeyParameters) DeepCopyInto(out *ApplicationKeyParameters) {
	*out = *in
	if in.AppID != nil {
		in, out := &in.AppID, &out.AppID
		*out = new(string)
		**out = **in
	}
	if in.AppIDRef != nil {
		in, out := &in.AppIDRef, &out.AppIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.AppIDSelector != nil {
		in, out := &in.AppIDSelector, &out.AppIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ExpirationDate != nil {
		in, out := &in.ExpirationDate, &out.ExpirationDate
		*out = new(string)
		**out = **in
	}
	if in.KeyType != nil {
		in, out := &in.KeyType, &out.KeyType
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationKeyParameters.
func (in *ApplicationKeyParameters) DeepCopy() *ApplicationKeyParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationKeyParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationKeySpec) DeepCopyInto(out *ApplicationKeySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationKeySpec.
func (in *ApplicationKeySpec) DeepCopy() *ApplicationKeySpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationKeySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationKeyStatus) DeepCopyInto(out *ApplicationKeyStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationKeyStatus.
func (in *ApplicationKeyStatus) DeepCopy() *ApplicationKeyStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationKeyStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationOidc) DeepCopyInto(out *ApplicationOidc) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationOidc.
func (in *ApplicationOidc) DeepCopy() *ApplicationOidc {
	if in == nil {
		return nil
	}
	out := new(ApplicationOidc)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationOidc) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationOidcInitParameters) DeepCopyInto(out *ApplicationOidcInitParameters) {
	*out = *in
	if in.AccessTokenRoleAssertion != nil {
		in, out := &in.AccessTokenRoleAssertion, &out.AccessTokenRoleAssertion
		*out = new(bool)
		**out = **in
	}
	if in.AccessTokenType != nil {
		in, out := &in.AccessTokenType, &out.AccessTokenType
		*out = new(string)
		**out = **in
	}
	if in.AdditionalOrigins != nil {
		in, out := &in.AdditionalOrigins, &out.AdditionalOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AppType != nil {
		in, out := &in.AppType, &out.AppType
		*out = new(string)
		**out = **in
	}
	if in.AuthMethodType != nil {
		in, out := &in.AuthMethodType, &out.AuthMethodType
		*out = new(string)
		**out = **in
	}
	if in.ClockSkew != nil {
		in, out := &in.ClockSkew, &out.ClockSkew
		*out = new(string)
		**out = **in
	}
	if in.DevMode != nil {
		in, out := &in.DevMode, &out.DevMode
		*out = new(bool)
		**out = **in
	}
	if in.GrantTypes != nil {
		in, out := &in.GrantTypes, &out.GrantTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IDTokenRoleAssertion != nil {
		in, out := &in.IDTokenRoleAssertion, &out.IDTokenRoleAssertion
		*out = new(bool)
		**out = **in
	}
	if in.IDTokenUserinfoAssertion != nil {
		in, out := &in.IDTokenUserinfoAssertion, &out.IDTokenUserinfoAssertion
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PostLogoutRedirectUris != nil {
		in, out := &in.PostLogoutRedirectUris, &out.PostLogoutRedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RedirectUris != nil {
		in, out := &in.RedirectUris, &out.RedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseTypes != nil {
		in, out := &in.ResponseTypes, &out.ResponseTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationOidcInitParameters.
func (in *ApplicationOidcInitParameters) DeepCopy() *ApplicationOidcInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationOidcInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationOidcList) DeepCopyInto(out *ApplicationOidcList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationOidc, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationOidcList.
func (in *ApplicationOidcList) DeepCopy() *ApplicationOidcList {
	if in == nil {
		return nil
	}
	out := new(ApplicationOidcList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationOidcList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationOidcObservation) DeepCopyInto(out *ApplicationOidcObservation) {
	*out = *in
	if in.AccessTokenRoleAssertion != nil {
		in, out := &in.AccessTokenRoleAssertion, &out.AccessTokenRoleAssertion
		*out = new(bool)
		**out = **in
	}
	if in.AccessTokenType != nil {
		in, out := &in.AccessTokenType, &out.AccessTokenType
		*out = new(string)
		**out = **in
	}
	if in.AdditionalOrigins != nil {
		in, out := &in.AdditionalOrigins, &out.AdditionalOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AppType != nil {
		in, out := &in.AppType, &out.AppType
		*out = new(string)
		**out = **in
	}
	if in.AuthMethodType != nil {
		in, out := &in.AuthMethodType, &out.AuthMethodType
		*out = new(string)
		**out = **in
	}
	if in.ClockSkew != nil {
		in, out := &in.ClockSkew, &out.ClockSkew
		*out = new(string)
		**out = **in
	}
	if in.DevMode != nil {
		in, out := &in.DevMode, &out.DevMode
		*out = new(bool)
		**out = **in
	}
	if in.GrantTypes != nil {
		in, out := &in.GrantTypes, &out.GrantTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IDTokenRoleAssertion != nil {
		in, out := &in.IDTokenRoleAssertion, &out.IDTokenRoleAssertion
		*out = new(bool)
		**out = **in
	}
	if in.IDTokenUserinfoAssertion != nil {
		in, out := &in.IDTokenUserinfoAssertion, &out.IDTokenUserinfoAssertion
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.PostLogoutRedirectUris != nil {
		in, out := &in.PostLogoutRedirectUris, &out.PostLogoutRedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.RedirectUris != nil {
		in, out := &in.RedirectUris, &out.RedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseTypes != nil {
		in, out := &in.ResponseTypes, &out.ResponseTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationOidcObservation.
func (in *ApplicationOidcObservation) DeepCopy() *ApplicationOidcObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationOidcObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationOidcParameters) DeepCopyInto(out *ApplicationOidcParameters) {
	*out = *in
	if in.AccessTokenRoleAssertion != nil {
		in, out := &in.AccessTokenRoleAssertion, &out.AccessTokenRoleAssertion
		*out = new(bool)
		**out = **in
	}
	if in.AccessTokenType != nil {
		in, out := &in.AccessTokenType, &out.AccessTokenType
		*out = new(string)
		**out = **in
	}
	if in.AdditionalOrigins != nil {
		in, out := &in.AdditionalOrigins, &out.AdditionalOrigins
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AppType != nil {
		in, out := &in.AppType, &out.AppType
		*out = new(string)
		**out = **in
	}
	if in.AuthMethodType != nil {
		in, out := &in.AuthMethodType, &out.AuthMethodType
		*out = new(string)
		**out = **in
	}
	if in.ClockSkew != nil {
		in, out := &in.ClockSkew, &out.ClockSkew
		*out = new(string)
		**out = **in
	}
	if in.DevMode != nil {
		in, out := &in.DevMode, &out.DevMode
		*out = new(bool)
		**out = **in
	}
	if in.GrantTypes != nil {
		in, out := &in.GrantTypes, &out.GrantTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.IDTokenRoleAssertion != nil {
		in, out := &in.IDTokenRoleAssertion, &out.IDTokenRoleAssertion
		*out = new(bool)
		**out = **in
	}
	if in.IDTokenUserinfoAssertion != nil {
		in, out := &in.IDTokenUserinfoAssertion, &out.IDTokenUserinfoAssertion
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PostLogoutRedirectUris != nil {
		in, out := &in.PostLogoutRedirectUris, &out.PostLogoutRedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.RedirectUris != nil {
		in, out := &in.RedirectUris, &out.RedirectUris
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ResponseTypes != nil {
		in, out := &in.ResponseTypes, &out.ResponseTypes
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationOidcParameters.
func (in *ApplicationOidcParameters) DeepCopy() *ApplicationOidcParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationOidcParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationOidcSpec) DeepCopyInto(out *ApplicationOidcSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationOidcSpec.
func (in *ApplicationOidcSpec) DeepCopy() *ApplicationOidcSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationOidcSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationOidcStatus) DeepCopyInto(out *ApplicationOidcStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationOidcStatus.
func (in *ApplicationOidcStatus) DeepCopy() *ApplicationOidcStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationOidcStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSaml) DeepCopyInto(out *ApplicationSaml) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSaml.
func (in *ApplicationSaml) DeepCopy() *ApplicationSaml {
	if in == nil {
		return nil
	}
	out := new(ApplicationSaml)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationSaml) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSamlInitParameters) DeepCopyInto(out *ApplicationSamlInitParameters) {
	*out = *in
	out.MetadataXMLSecretRef = in.MetadataXMLSecretRef
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSamlInitParameters.
func (in *ApplicationSamlInitParameters) DeepCopy() *ApplicationSamlInitParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationSamlInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSamlList) DeepCopyInto(out *ApplicationSamlList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationSaml, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSamlList.
func (in *ApplicationSamlList) DeepCopy() *ApplicationSamlList {
	if in == nil {
		return nil
	}
	out := new(ApplicationSamlList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationSamlList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSamlObservation) DeepCopyInto(out *ApplicationSamlObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSamlObservation.
func (in *ApplicationSamlObservation) DeepCopy() *ApplicationSamlObservation {
	if in == nil {
		return nil
	}
	out := new(ApplicationSamlObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSamlParameters) DeepCopyInto(out *ApplicationSamlParameters) {
	*out = *in
	out.MetadataXMLSecretRef = in.MetadataXMLSecretRef
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.OrgID != nil {
		in, out := &in.OrgID, &out.OrgID
		*out = new(string)
		**out = **in
	}
	if in.OrgIDRef != nil {
		in, out := &in.OrgIDRef, &out.OrgIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.OrgIDSelector != nil {
		in, out := &in.OrgIDSelector, &out.OrgIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.ProjectIDRef != nil {
		in, out := &in.ProjectIDRef, &out.ProjectIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.ProjectIDSelector != nil {
		in, out := &in.ProjectIDSelector, &out.ProjectIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSamlParameters.
func (in *ApplicationSamlParameters) DeepCopy() *ApplicationSamlParameters {
	if in == nil {
		return nil
	}
	out := new(ApplicationSamlParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSamlSpec) DeepCopyInto(out *ApplicationSamlSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSamlSpec.
func (in *ApplicationSamlSpec) DeepCopy() *ApplicationSamlSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationSamlSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationSamlStatus) DeepCopyInto(out *ApplicationSamlStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationSamlStatus.
func (in *ApplicationSamlStatus) DeepCopy() *ApplicationSamlStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationSamlStatus)
	in.DeepCopyInto(out)
	return out
}
