// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by angryjet. DO NOT EDIT.

package v1alpha1

import xpv1 "github.com/crossplane/crossplane-runtime/apis/common/v1"

// GetCondition of this DefaultPasswordChangeMessageText.
func (mg *DefaultPasswordChangeMessageText) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DefaultPasswordChangeMessageText.
func (mg *DefaultPasswordChangeMessageText) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this DefaultPasswordChangeMessageText.
func (mg *DefaultPasswordChangeMessageText) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this DefaultPasswordChangeMessageText.
func (mg *DefaultPasswordChangeMessageText) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this DefaultPasswordChangeMessageText.
func (mg *DefaultPasswordChangeMessageText) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this DefaultPasswordChangeMessageText.
func (mg *DefaultPasswordChangeMessageText) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DefaultPasswordChangeMessageText.
func (mg *DefaultPasswordChangeMessageText) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DefaultPasswordChangeMessageText.
func (mg *DefaultPasswordChangeMessageText) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this DefaultPasswordChangeMessageText.
func (mg *DefaultPasswordChangeMessageText) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this DefaultPasswordChangeMessageText.
func (mg *DefaultPasswordChangeMessageText) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this DefaultPasswordChangeMessageText.
func (mg *DefaultPasswordChangeMessageText) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this DefaultPasswordChangeMessageText.
func (mg *DefaultPasswordChangeMessageText) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DefaultPasswordComplexityPolicy.
func (mg *DefaultPasswordComplexityPolicy) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DefaultPasswordComplexityPolicy.
func (mg *DefaultPasswordComplexityPolicy) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this DefaultPasswordComplexityPolicy.
func (mg *DefaultPasswordComplexityPolicy) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this DefaultPasswordComplexityPolicy.
func (mg *DefaultPasswordComplexityPolicy) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this DefaultPasswordComplexityPolicy.
func (mg *DefaultPasswordComplexityPolicy) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this DefaultPasswordComplexityPolicy.
func (mg *DefaultPasswordComplexityPolicy) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DefaultPasswordComplexityPolicy.
func (mg *DefaultPasswordComplexityPolicy) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DefaultPasswordComplexityPolicy.
func (mg *DefaultPasswordComplexityPolicy) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this DefaultPasswordComplexityPolicy.
func (mg *DefaultPasswordComplexityPolicy) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this DefaultPasswordComplexityPolicy.
func (mg *DefaultPasswordComplexityPolicy) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this DefaultPasswordComplexityPolicy.
func (mg *DefaultPasswordComplexityPolicy) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this DefaultPasswordComplexityPolicy.
func (mg *DefaultPasswordComplexityPolicy) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DefaultPasswordLessRegistrationMessageText.
func (mg *DefaultPasswordLessRegistrationMessageText) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DefaultPasswordLessRegistrationMessageText.
func (mg *DefaultPasswordLessRegistrationMessageText) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this DefaultPasswordLessRegistrationMessageText.
func (mg *DefaultPasswordLessRegistrationMessageText) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this DefaultPasswordLessRegistrationMessageText.
func (mg *DefaultPasswordLessRegistrationMessageText) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this DefaultPasswordLessRegistrationMessageText.
func (mg *DefaultPasswordLessRegistrationMessageText) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this DefaultPasswordLessRegistrationMessageText.
func (mg *DefaultPasswordLessRegistrationMessageText) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DefaultPasswordLessRegistrationMessageText.
func (mg *DefaultPasswordLessRegistrationMessageText) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DefaultPasswordLessRegistrationMessageText.
func (mg *DefaultPasswordLessRegistrationMessageText) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this DefaultPasswordLessRegistrationMessageText.
func (mg *DefaultPasswordLessRegistrationMessageText) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this DefaultPasswordLessRegistrationMessageText.
func (mg *DefaultPasswordLessRegistrationMessageText) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this DefaultPasswordLessRegistrationMessageText.
func (mg *DefaultPasswordLessRegistrationMessageText) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this DefaultPasswordLessRegistrationMessageText.
func (mg *DefaultPasswordLessRegistrationMessageText) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DefaultPasswordResetMessageText.
func (mg *DefaultPasswordResetMessageText) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DefaultPasswordResetMessageText.
func (mg *DefaultPasswordResetMessageText) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this DefaultPasswordResetMessageText.
func (mg *DefaultPasswordResetMessageText) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this DefaultPasswordResetMessageText.
func (mg *DefaultPasswordResetMessageText) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this DefaultPasswordResetMessageText.
func (mg *DefaultPasswordResetMessageText) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this DefaultPasswordResetMessageText.
func (mg *DefaultPasswordResetMessageText) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DefaultPasswordResetMessageText.
func (mg *DefaultPasswordResetMessageText) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DefaultPasswordResetMessageText.
func (mg *DefaultPasswordResetMessageText) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this DefaultPasswordResetMessageText.
func (mg *DefaultPasswordResetMessageText) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this DefaultPasswordResetMessageText.
func (mg *DefaultPasswordResetMessageText) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this DefaultPasswordResetMessageText.
func (mg *DefaultPasswordResetMessageText) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this DefaultPasswordResetMessageText.
func (mg *DefaultPasswordResetMessageText) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DefaultVerifyEmailMessageText.
func (mg *DefaultVerifyEmailMessageText) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DefaultVerifyEmailMessageText.
func (mg *DefaultVerifyEmailMessageText) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this DefaultVerifyEmailMessageText.
func (mg *DefaultVerifyEmailMessageText) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this DefaultVerifyEmailMessageText.
func (mg *DefaultVerifyEmailMessageText) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this DefaultVerifyEmailMessageText.
func (mg *DefaultVerifyEmailMessageText) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this DefaultVerifyEmailMessageText.
func (mg *DefaultVerifyEmailMessageText) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DefaultVerifyEmailMessageText.
func (mg *DefaultVerifyEmailMessageText) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DefaultVerifyEmailMessageText.
func (mg *DefaultVerifyEmailMessageText) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this DefaultVerifyEmailMessageText.
func (mg *DefaultVerifyEmailMessageText) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this DefaultVerifyEmailMessageText.
func (mg *DefaultVerifyEmailMessageText) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this DefaultVerifyEmailMessageText.
func (mg *DefaultVerifyEmailMessageText) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this DefaultVerifyEmailMessageText.
func (mg *DefaultVerifyEmailMessageText) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DefaultVerifyEmailOtpMessageText.
func (mg *DefaultVerifyEmailOtpMessageText) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DefaultVerifyEmailOtpMessageText.
func (mg *DefaultVerifyEmailOtpMessageText) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this DefaultVerifyEmailOtpMessageText.
func (mg *DefaultVerifyEmailOtpMessageText) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this DefaultVerifyEmailOtpMessageText.
func (mg *DefaultVerifyEmailOtpMessageText) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this DefaultVerifyEmailOtpMessageText.
func (mg *DefaultVerifyEmailOtpMessageText) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this DefaultVerifyEmailOtpMessageText.
func (mg *DefaultVerifyEmailOtpMessageText) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DefaultVerifyEmailOtpMessageText.
func (mg *DefaultVerifyEmailOtpMessageText) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DefaultVerifyEmailOtpMessageText.
func (mg *DefaultVerifyEmailOtpMessageText) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this DefaultVerifyEmailOtpMessageText.
func (mg *DefaultVerifyEmailOtpMessageText) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this DefaultVerifyEmailOtpMessageText.
func (mg *DefaultVerifyEmailOtpMessageText) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this DefaultVerifyEmailOtpMessageText.
func (mg *DefaultVerifyEmailOtpMessageText) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this DefaultVerifyEmailOtpMessageText.
func (mg *DefaultVerifyEmailOtpMessageText) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DefaultVerifyPhoneMessageText.
func (mg *DefaultVerifyPhoneMessageText) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DefaultVerifyPhoneMessageText.
func (mg *DefaultVerifyPhoneMessageText) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this DefaultVerifyPhoneMessageText.
func (mg *DefaultVerifyPhoneMessageText) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this DefaultVerifyPhoneMessageText.
func (mg *DefaultVerifyPhoneMessageText) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this DefaultVerifyPhoneMessageText.
func (mg *DefaultVerifyPhoneMessageText) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this DefaultVerifyPhoneMessageText.
func (mg *DefaultVerifyPhoneMessageText) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DefaultVerifyPhoneMessageText.
func (mg *DefaultVerifyPhoneMessageText) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DefaultVerifyPhoneMessageText.
func (mg *DefaultVerifyPhoneMessageText) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this DefaultVerifyPhoneMessageText.
func (mg *DefaultVerifyPhoneMessageText) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this DefaultVerifyPhoneMessageText.
func (mg *DefaultVerifyPhoneMessageText) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this DefaultVerifyPhoneMessageText.
func (mg *DefaultVerifyPhoneMessageText) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this DefaultVerifyPhoneMessageText.
func (mg *DefaultVerifyPhoneMessageText) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this DomainClaimedMessageText.
func (mg *DomainClaimedMessageText) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this DomainClaimedMessageText.
func (mg *DomainClaimedMessageText) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this DomainClaimedMessageText.
func (mg *DomainClaimedMessageText) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this DomainClaimedMessageText.
func (mg *DomainClaimedMessageText) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this DomainClaimedMessageText.
func (mg *DomainClaimedMessageText) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this DomainClaimedMessageText.
func (mg *DomainClaimedMessageText) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this DomainClaimedMessageText.
func (mg *DomainClaimedMessageText) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this DomainClaimedMessageText.
func (mg *DomainClaimedMessageText) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this DomainClaimedMessageText.
func (mg *DomainClaimedMessageText) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this DomainClaimedMessageText.
func (mg *DomainClaimedMessageText) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this DomainClaimedMessageText.
func (mg *DomainClaimedMessageText) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this DomainClaimedMessageText.
func (mg *DomainClaimedMessageText) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this InitMessageText.
func (mg *InitMessageText) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this InitMessageText.
func (mg *InitMessageText) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this InitMessageText.
func (mg *InitMessageText) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this InitMessageText.
func (mg *InitMessageText) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this InitMessageText.
func (mg *InitMessageText) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this InitMessageText.
func (mg *InitMessageText) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this InitMessageText.
func (mg *InitMessageText) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this InitMessageText.
func (mg *InitMessageText) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this InitMessageText.
func (mg *InitMessageText) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this InitMessageText.
func (mg *InitMessageText) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this InitMessageText.
func (mg *InitMessageText) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this InitMessageText.
func (mg *InitMessageText) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PasswordChangeMessageText.
func (mg *PasswordChangeMessageText) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PasswordChangeMessageText.
func (mg *PasswordChangeMessageText) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this PasswordChangeMessageText.
func (mg *PasswordChangeMessageText) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this PasswordChangeMessageText.
func (mg *PasswordChangeMessageText) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this PasswordChangeMessageText.
func (mg *PasswordChangeMessageText) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PasswordChangeMessageText.
func (mg *PasswordChangeMessageText) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PasswordChangeMessageText.
func (mg *PasswordChangeMessageText) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PasswordChangeMessageText.
func (mg *PasswordChangeMessageText) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this PasswordChangeMessageText.
func (mg *PasswordChangeMessageText) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this PasswordChangeMessageText.
func (mg *PasswordChangeMessageText) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this PasswordChangeMessageText.
func (mg *PasswordChangeMessageText) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PasswordChangeMessageText.
func (mg *PasswordChangeMessageText) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PasswordLessRegistrationMessageText.
func (mg *PasswordLessRegistrationMessageText) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PasswordLessRegistrationMessageText.
func (mg *PasswordLessRegistrationMessageText) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this PasswordLessRegistrationMessageText.
func (mg *PasswordLessRegistrationMessageText) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this PasswordLessRegistrationMessageText.
func (mg *PasswordLessRegistrationMessageText) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this PasswordLessRegistrationMessageText.
func (mg *PasswordLessRegistrationMessageText) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PasswordLessRegistrationMessageText.
func (mg *PasswordLessRegistrationMessageText) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PasswordLessRegistrationMessageText.
func (mg *PasswordLessRegistrationMessageText) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PasswordLessRegistrationMessageText.
func (mg *PasswordLessRegistrationMessageText) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this PasswordLessRegistrationMessageText.
func (mg *PasswordLessRegistrationMessageText) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this PasswordLessRegistrationMessageText.
func (mg *PasswordLessRegistrationMessageText) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this PasswordLessRegistrationMessageText.
func (mg *PasswordLessRegistrationMessageText) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PasswordLessRegistrationMessageText.
func (mg *PasswordLessRegistrationMessageText) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this PasswordResetMessageText.
func (mg *PasswordResetMessageText) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this PasswordResetMessageText.
func (mg *PasswordResetMessageText) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this PasswordResetMessageText.
func (mg *PasswordResetMessageText) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this PasswordResetMessageText.
func (mg *PasswordResetMessageText) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this PasswordResetMessageText.
func (mg *PasswordResetMessageText) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this PasswordResetMessageText.
func (mg *PasswordResetMessageText) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this PasswordResetMessageText.
func (mg *PasswordResetMessageText) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this PasswordResetMessageText.
func (mg *PasswordResetMessageText) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this PasswordResetMessageText.
func (mg *PasswordResetMessageText) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this PasswordResetMessageText.
func (mg *PasswordResetMessageText) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this PasswordResetMessageText.
func (mg *PasswordResetMessageText) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this PasswordResetMessageText.
func (mg *PasswordResetMessageText) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SmsProviderTwilio.
func (mg *SmsProviderTwilio) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SmsProviderTwilio.
func (mg *SmsProviderTwilio) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this SmsProviderTwilio.
func (mg *SmsProviderTwilio) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this SmsProviderTwilio.
func (mg *SmsProviderTwilio) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this SmsProviderTwilio.
func (mg *SmsProviderTwilio) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this SmsProviderTwilio.
func (mg *SmsProviderTwilio) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SmsProviderTwilio.
func (mg *SmsProviderTwilio) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SmsProviderTwilio.
func (mg *SmsProviderTwilio) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this SmsProviderTwilio.
func (mg *SmsProviderTwilio) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this SmsProviderTwilio.
func (mg *SmsProviderTwilio) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this SmsProviderTwilio.
func (mg *SmsProviderTwilio) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this SmsProviderTwilio.
func (mg *SmsProviderTwilio) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this SmtpConfig.
func (mg *SmtpConfig) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this SmtpConfig.
func (mg *SmtpConfig) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this SmtpConfig.
func (mg *SmtpConfig) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this SmtpConfig.
func (mg *SmtpConfig) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this SmtpConfig.
func (mg *SmtpConfig) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this SmtpConfig.
func (mg *SmtpConfig) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this SmtpConfig.
func (mg *SmtpConfig) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this SmtpConfig.
func (mg *SmtpConfig) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this SmtpConfig.
func (mg *SmtpConfig) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this SmtpConfig.
func (mg *SmtpConfig) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this SmtpConfig.
func (mg *SmtpConfig) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this SmtpConfig.
func (mg *SmtpConfig) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VerifyEmailMessageText.
func (mg *VerifyEmailMessageText) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VerifyEmailMessageText.
func (mg *VerifyEmailMessageText) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this VerifyEmailMessageText.
func (mg *VerifyEmailMessageText) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this VerifyEmailMessageText.
func (mg *VerifyEmailMessageText) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this VerifyEmailMessageText.
func (mg *VerifyEmailMessageText) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VerifyEmailMessageText.
func (mg *VerifyEmailMessageText) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VerifyEmailMessageText.
func (mg *VerifyEmailMessageText) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VerifyEmailMessageText.
func (mg *VerifyEmailMessageText) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this VerifyEmailMessageText.
func (mg *VerifyEmailMessageText) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this VerifyEmailMessageText.
func (mg *VerifyEmailMessageText) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this VerifyEmailMessageText.
func (mg *VerifyEmailMessageText) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VerifyEmailMessageText.
func (mg *VerifyEmailMessageText) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VerifyEmailOtpMessageText.
func (mg *VerifyEmailOtpMessageText) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VerifyEmailOtpMessageText.
func (mg *VerifyEmailOtpMessageText) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this VerifyEmailOtpMessageText.
func (mg *VerifyEmailOtpMessageText) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this VerifyEmailOtpMessageText.
func (mg *VerifyEmailOtpMessageText) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this VerifyEmailOtpMessageText.
func (mg *VerifyEmailOtpMessageText) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VerifyEmailOtpMessageText.
func (mg *VerifyEmailOtpMessageText) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VerifyEmailOtpMessageText.
func (mg *VerifyEmailOtpMessageText) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VerifyEmailOtpMessageText.
func (mg *VerifyEmailOtpMessageText) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this VerifyEmailOtpMessageText.
func (mg *VerifyEmailOtpMessageText) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this VerifyEmailOtpMessageText.
func (mg *VerifyEmailOtpMessageText) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this VerifyEmailOtpMessageText.
func (mg *VerifyEmailOtpMessageText) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VerifyEmailOtpMessageText.
func (mg *VerifyEmailOtpMessageText) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VerifyphoneMessageText.
func (mg *VerifyphoneMessageText) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VerifyphoneMessageText.
func (mg *VerifyphoneMessageText) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this VerifyphoneMessageText.
func (mg *VerifyphoneMessageText) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this VerifyphoneMessageText.
func (mg *VerifyphoneMessageText) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this VerifyphoneMessageText.
func (mg *VerifyphoneMessageText) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VerifyphoneMessageText.
func (mg *VerifyphoneMessageText) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VerifyphoneMessageText.
func (mg *VerifyphoneMessageText) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VerifyphoneMessageText.
func (mg *VerifyphoneMessageText) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this VerifyphoneMessageText.
func (mg *VerifyphoneMessageText) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this VerifyphoneMessageText.
func (mg *VerifyphoneMessageText) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this VerifyphoneMessageText.
func (mg *VerifyphoneMessageText) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VerifyphoneMessageText.
func (mg *VerifyphoneMessageText) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}

// GetCondition of this VerifysmsOtpMessageText.
func (mg *VerifysmsOtpMessageText) GetCondition(ct xpv1.ConditionType) xpv1.Condition {
	return mg.Status.GetCondition(ct)
}

// GetDeletionPolicy of this VerifysmsOtpMessageText.
func (mg *VerifysmsOtpMessageText) GetDeletionPolicy() xpv1.DeletionPolicy {
	return mg.Spec.DeletionPolicy
}

// GetManagementPolicies of this VerifysmsOtpMessageText.
func (mg *VerifysmsOtpMessageText) GetManagementPolicies() xpv1.ManagementPolicies {
	return mg.Spec.ManagementPolicies
}

// GetProviderConfigReference of this VerifysmsOtpMessageText.
func (mg *VerifysmsOtpMessageText) GetProviderConfigReference() *xpv1.Reference {
	return mg.Spec.ProviderConfigReference
}

// GetPublishConnectionDetailsTo of this VerifysmsOtpMessageText.
func (mg *VerifysmsOtpMessageText) GetPublishConnectionDetailsTo() *xpv1.PublishConnectionDetailsTo {
	return mg.Spec.PublishConnectionDetailsTo
}

// GetWriteConnectionSecretToReference of this VerifysmsOtpMessageText.
func (mg *VerifysmsOtpMessageText) GetWriteConnectionSecretToReference() *xpv1.SecretReference {
	return mg.Spec.WriteConnectionSecretToReference
}

// SetConditions of this VerifysmsOtpMessageText.
func (mg *VerifysmsOtpMessageText) SetConditions(c ...xpv1.Condition) {
	mg.Status.SetConditions(c...)
}

// SetDeletionPolicy of this VerifysmsOtpMessageText.
func (mg *VerifysmsOtpMessageText) SetDeletionPolicy(r xpv1.DeletionPolicy) {
	mg.Spec.DeletionPolicy = r
}

// SetManagementPolicies of this VerifysmsOtpMessageText.
func (mg *VerifysmsOtpMessageText) SetManagementPolicies(r xpv1.ManagementPolicies) {
	mg.Spec.ManagementPolicies = r
}

// SetProviderConfigReference of this VerifysmsOtpMessageText.
func (mg *VerifysmsOtpMessageText) SetProviderConfigReference(r *xpv1.Reference) {
	mg.Spec.ProviderConfigReference = r
}

// SetPublishConnectionDetailsTo of this VerifysmsOtpMessageText.
func (mg *VerifysmsOtpMessageText) SetPublishConnectionDetailsTo(r *xpv1.PublishConnectionDetailsTo) {
	mg.Spec.PublishConnectionDetailsTo = r
}

// SetWriteConnectionSecretToReference of this VerifysmsOtpMessageText.
func (mg *VerifysmsOtpMessageText) SetWriteConnectionSecretToReference(r *xpv1.SecretReference) {
	mg.Spec.WriteConnectionSecretToReference = r
}
